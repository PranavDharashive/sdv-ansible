---
- name: Create node_exporter user
  ansible.builtin.user:
    name: node_exporter
    shell: /bin/false
    create_home: no
    state: present

- name: Download node_exporter
  ansible.builtin.get_url:
    url: https://github.com/prometheus/node_exporter/releases/download/v1.8.1/node_exporter-1.8.1.linux-amd64.tar.gz
    dest: /tmp/node_exporter-1.8.1.linux-amd64.tar.gz
    mode: '0644'

- name: Extract node_exporter
  ansible.builtin.unarchive:
    src: /tmp/node_exporter-1.8.1.linux-amd64.tar.gz
    dest: /tmp
    remote_src: yes

- name: Copy node_exporter binary
  ansible.builtin.copy:
    src: /tmp/node_exporter-1.8.1.linux-amd64/node_exporter
    dest: /usr/local/bin/node_exporter
    remote_src: yes
    mode: '0755'

- name: Create node_exporter systemd service file
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Node Exporter
      Wants=network-online.target
      After=network-online.target

      [Service]
      User=node_exporter
      Group=node_exporter
      Type=simple
      ExecStart=/usr/local/bin/node_exporter

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/node_exporter.service
    mode: '0644'
  notify:
    - Reload systemd
    - Start node_exporter

- name: Create Node Exporter Service and Endpoints
  kubernetes.core.k8s:
    state: present
    definition: |
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app.kubernetes.io/name: node-exporter
          app.kubernetes.io/instance: node-exporter
        name: node-exporter
        namespace: monitoring
      spec:
        ports:
        - name: http-metrics
          port: 9100
          protocol: TCP
          targetPort: 9100
        selector:
          app.kubernetes.io/name: node-exporter
      type: ClusterIP
---
      apiVersion: v1
      kind: Endpoints
      metadata:
        labels:
          app.kubernetes.io/name: node-exporter
          app.kubernetes.io/instance: node-exporter
        name: node-exporter
        namespace: monitoring
      subsets:
        - addresses:
            - ip: "{{ ansible_default_ipv4.address }}" # Use the host's IP address
          ports:
            - name: http-metrics
              port: 9100
              protocol: TCP

- name: Create monitoring namespace
  kubernetes.core.k8s:
    name: monitoring
    api_version: v1
    kind: Namespace
    state: present

- name: Deploy Kube-state-metrics
  kubernetes.core.k8s:
    state: present
    src: https://raw.githubusercontent.com/kubernetes/kube-state-metrics/master/examples/standard/kube-state-metrics-deployment.yaml
    namespace: monitoring

- name: Deploy Prometheus Operator CRDs
  kubernetes.core.k8s:
    state: present
    src: "{{ item }}"
  loop:
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml

- name: Deploy Prometheus Operator RBAC
  kubernetes.core.k8s:
    state: present
    src: "{{ item }}"
    namespace: monitoring
  loop:
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/rbac/prometheus-operator/prometheus-operator-service-accounts.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/rbac/prometheus-operator/prometheus-operator-cluster-roles.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/rbac/prometheus-operator/prometheus-operator-cluster-role-bindings.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/rbac/prometheus-operator/prometheus-operator-roles.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/rbac/prometheus-operator/prometheus-operator-role-bindings.yaml

- name: Deploy Prometheus Operator Deployment
  kubernetes.core.k8s:
    state: present
    src: https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-operator-deployment.yaml
    namespace: monitoring

- name: Deploy ServiceMonitor for Node Exporter
  kubernetes.core.k8s:
    state: present
    definition: |
      apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        labels:
          app.kubernetes.io/name: node-exporter
          app.kubernetes.io/instance: node-exporter
        name: node-exporter
        namespace: monitoring
      spec:
        endpoints:
        - port: http-metrics
          interval: 30s
        selector:
          matchLabels:
            app.kubernetes.io/name: node-exporter
            app.kubernetes.io/instance: node-exporter

- name: Deploy Prometheus instance
  kubernetes.core.k8s:
    state: present
    src: "{{ item }}"
    namespace: monitoring
  loop:
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-example-app/prometheus-example-app-deployment.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-example-app/prometheus-example-app-service.yaml
    - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/master/example/prometheus-example-app/prometheus-example-app-servicemonitor.yaml

- name: Deploy Grafana
  kubernetes.core.k8s:
    state: present
    src: "{{ item }}"
    namespace: monitoring
  loop:
    - https://raw.githubusercontent.com/prometheus-operator/kube-prometheus/main/manifests/grafana-deployment.yaml
    - https://raw.githubusercontent.com/prometheus-operator/kube-prometheus/main/manifests/grafana-service.yaml

- name: Patch Grafana service to use NodePort
  kubernetes.core.k8s:
    state: present
    definition: |
      apiVersion: v1
      kind: Service
      metadata:
        name: grafana
        namespace: monitoring
      spec:
        type: NodePort
        ports:
          - port: 3000
            targetPort: 3000
            nodePort: 30000

- name: Patch Prometheus service to use NodePort
  kubernetes.core.k8s:
    state: present
    definition: |
      apiVersion: v1
      kind: Service
      metadata:
        name: prometheus-example-app
        namespace: monitoring
      spec:
        type: NodePort
        ports:
          - port: 9090
            targetPort: 9090
            nodePort: 30090

- name: Create Grafana Kubernetes Dashboard ConfigMap
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: grafana-kubernetes-dashboard
        namespace: monitoring
        labels:
          grafana_dashboard: "1"
      data:
        kubernetes-cluster-overview.json: |
          {{ lookup('file', '15661_rev2.json') | to_nice_json }}

- name: Patch Grafana deployment to provision Kubernetes dashboard
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: grafana
        namespace: monitoring
      spec:
        template:
          spec:
            volumes:
              - name: grafana-dashboards
                configMap:
                  name: grafana-kubernetes-dashboard
            containers:
              - name: grafana
                volumeMounts:
                  - name: grafana-dashboards
                    mountPath: /etc/grafana/provisioning/dashboards/kubernetes-cluster-overview.json
                    subPath: kubernetes-cluster-overview.json

- name: Verify Node Exporter service status
  ansible.builtin.systemd_service:
    name: node_exporter
    state: started
    enabled: yes
  register: node_exporter_status
  failed_when: not node_exporter_status.status.ActiveState == "active"

- name: Verify monitoring stack pods are running
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app.kubernetes.io/name=prometheus
  register: prometheus_pods
  until: prometheus_pods.resources | length > 0 and prometheus_pods.resources[0].status.containerStatuses[0].ready
  retries: 30
  delay: 10

- name: Verify Grafana pods are running
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app.kubernetes.io/name=grafana
  register: grafana_pods
  until: grafana_pods.resources | length > 0 and grafana_pods.resources[0].status.containerStatuses[0].ready
  retries: 30
  delay: 10
